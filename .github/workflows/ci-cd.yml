name: Build and Push to ECR

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Extract Version Tag
      run: |
        VERSION_TAG=$(echo $GITHUB_REF | sed 's|refs/tags/v||')
        echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:${VERSION_TAG} .
        docker push ${{ secrets.ECR_REPOSITORY_URI }}:${VERSION_TAG}

    - name: Update Argo CD application
      run: |
        # kubeconfig 설정
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
        
        # Argo CD application 업데이트
        kubectl patch application backend-app -n argocd --type=json \
          -p='[{"op": "replace", "path": "/spec/source/targetRevision", "value":"'${VERSION_TAG}'"},
               {"op": "replace", "path": "/spec/source/helm/parameters/0/value", "value":"'${VERSION_TAG}'"}]'