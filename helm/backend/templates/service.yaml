apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: backend
  annotations:
    {{- if eq .Values.service.type "LoadBalancer" }}
    # AWS ALB annotations
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    # SSL/TLS configuration
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-west-2:688567288847:certificate/16863a82-4372-4edb-9700-0f98556f29e9
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8000"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: HTTP
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    {{- end }}
spec:
  type: {{ .Values.service.type }}
  ports:
    {{- if eq .Values.service.type "LoadBalancer" }}
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8000
      protocol: TCP
    {{- else }}
    - name: http
      port: {{ .Values.service.port }}
      targetPort: 8000
      protocol: TCP
    {{- end }}
  selector:
    app: backend
